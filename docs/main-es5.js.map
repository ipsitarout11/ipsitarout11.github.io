{"version":3,"sources":["webpack:///src/app/users/edit-user/edit-user.component.ts","webpack:///src/app/users/edit-user/edit-user.component.html","webpack:///src/environments/environment.ts","webpack:///src/app/services/data.service.ts","webpack:///src/app/users/add-user/add-user.component.ts","webpack:///src/app/users/add-user/add-user.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/in-memory.service.ts","webpack:///src/app/users/delete-user/delete-user.component.ts","webpack:///src/app/users/delete-user/delete-user.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["EditUserComponent","dialogRef","data","fb","dataService","_snackBar","isUserUpdated","buildForm","getUser","id","editUserForm","group","FirstName","required","LastName","Email","Address","subscribe","serviceResult","patchValue","user","Object","assign","value","console","log","updateUser","emit","close","open","duration","onNoClick","selector","templateUrl","styleUrls","environment","production","httpOptions","headers","DataService","http","baseUrl","Headers","post","pipe","handleError","get","error","ErrorEvent","message","status","providedIn","AddUserComponent","isUserAdded","addUserForm","addUser","addNewUser","AppComponent","dialog","ref","title","displayedColumns","getUsers","filterValue","dataSource","users","trim","toLowerCase","filter","sub","componentInstance","length","splice","detectChanges","afterClosed","result","i","paginator","applyFilter","AppModule","forRoot","declarations","imports","providers","bootstrap","InMemoryService","sample","DeleteUserComponent","deleteUser","confirmDelete","routes","AppRoutingModule","exports","bootstrapModule","err","webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;UAaaA,iB;AAIT,mCAAmBC,SAAnB,EACoCC,IADpC,EAEYC,EAFZ,EAGYC,WAHZ,EAIYC,SAJZ,EAIkC;AAAA;;AAJf,eAAAJ,SAAA,GAAAA,SAAA;AACiB,eAAAC,IAAA,GAAAA,IAAA;AACxB,eAAAC,EAAA,GAAAA,EAAA;AACA,eAAAC,WAAA,GAAAA,WAAA;AACA,eAAAC,SAAA,GAAAA,SAAA;AALF,eAAAC,aAAA,GAAgB,IAAI,0DAAJ,EAAhB;AAML;;;;iBAEL,oBAAW;AAEP,iBAAKC,SAAL;AACA,iBAAKC,OAAL,CAAa,KAAKN,IAAL,CAAUO,EAAvB;AACH;;;iBACD,qBAAY;AACR,iBAAKC,YAAL,GAAoB,KAAKP,EAAL,CAAQQ,KAAR,CAAc;AAC9BC,uBAAS,EAAE,CAAC,EAAD,EAAK,0DAAWC,QAAhB,CADmB;AAEpCC,sBAAQ,EAAE,CAAC,EAAD,EAAK,0DAAWD,QAAhB,CAF0B;AAGpCE,mBAAK,EAAE,CAAC,EAAD,EAAK,0DAAWF,QAAhB,CAH6B;AAIpC;AACAG,qBAAO,EAAE,CAAC,EAAD,EAAK,0DAAWH,QAAhB;AAL2B,aAAd,CAApB;AAOH;;;iBACM,iBAAQJ,EAAR,EAAkB;AAAA;;AACrB,iBAAKL,WAAL,CAAiBI,OAAjB,CAAyBC,EAAzB,EACKQ,SADL,CACe,UAAAC,aAAa,EAAI;AACxB,mBAAI,CAACR,YAAL,CAAkBS,UAAlB,CAA6BD,aAA7B;AACH,aAHL;AAIH;;;iBACM,sBAAU;AAAA;;AACb,iBAAKE,IAAL,GAAYC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,KAAKZ,YAAL,CAAkBa,KAApC,CAAZ;AACAC,mBAAO,CAACC,GAAR,CAAY,KAAKL,IAAjB;AACAI,mBAAO,CAACC,GAAR,CAAY,KAAKvB,IAAL,CAAUO,EAAtB;AAEA,iBAAKL,WAAL,CAAiBsB,UAAjB,CAA4B,KAAKxB,IAAL,CAAUO,EAAtC,EAA0C,KAAKW,IAA/C,EACKH,SADL,CACe,UAAAC,aAAa,EAAI;AACxBM,qBAAO,CAACC,GAAR,CAAYP,aAAZ;;AACA,oBAAI,CAACZ,aAAL,CAAmBqB,IAAnB,CAAwB,MAAI,CAACP,IAA7B;;AACA,oBAAI,CAACnB,SAAL,CAAe2B,KAAf;;AACA,oBAAI,CAACvB,SAAL,CAAewB,IAAf,CAAoB,2BAApB,EAAiD,SAAjD,EAA4D;AACxDC,wBAAQ,EAAE;AAD8C,eAA5D;AAIH,aATL;AAUH;;;iBACD,qBAAS;AACL,iBAAK7B,SAAL,CAAe2B,KAAf;AACH;;;;;;;yBAjDQ5B,iB,EAAiB,sI,EAAA,gEAKd,wEALc,C,EAKC,2H,EAAA,mI,EAAA,wI;AAAA,O;;;cALlBA,iB;AAAiB,kD;AAAA;AAAA;AAAA,S;AAAA,kB;AAAA,iB;AAAA,e;AAAA,sqB;AAAA;AAAA;ACb9B;;AACI;;AAAqB;;AAAW;;AAEhC;;AACE;;AACE;;AACE;;AAEF;;AACF;;AAGA;;AACE;;AACE;;AAEF;;AACF;;AAGA;;AACE;;AACE;;AAGF;;AACF;;AAGA;;AACE;;AACE;;AACF;;AACF;;AACA;;AACE;;AAAmB;AAAA,qBAAS,IAAA0B,UAAA,EAAT;AAAqB,aAArB;;AAAwD;;AAAM;;AACjF;;AAAmB;AAAA,qBAAS,IAAAK,SAAA,EAAT;AAAoB,aAApB;;AAAoC;;AAAM;;AAC/D;;AACF;;AACF;;;;AApCmC;;AAAA;;AAgCa;;AAAA;;;;;;;;;wEDtBrC/B,iB,EAAiB;gBAN7B,uDAM6B;iBANnB;AACPgC,oBAAQ,EAAE,qBADH;AAEPC,uBAAW,EAAE,0BAFN;AAGPC,qBAAS,EAAE,CAAC,0BAAD;AAHJ,W;AAMmB,U;;;;;;oBAKrB,oD;qBAAO,wE;;;;;;;;;;AAFF5B,uBAAa;kBAAtB;AAAsB;;;;;;;;;;;;;;;;;;;AEhB3B;AAAA;;;AAAA;AAAA;AAAA,S,CAAA;AACA;AACA;;;AAEO,UAAM6B,WAAW,GAAG;AACzBC,kBAAU,EAAE;AADa,OAApB;AAIP;;;;;;;AAOA;;;;;;;;;;;;;;;;;ACfA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AASA,UAAMC,WAAW,GAAG;AAClBC,eAAO,EAAE,IAAI,gEAAJ,CAAgB;AACvB,0BAAgB,kBADO;AAEvB,2BAAiB;AAFM,SAAhB;AADS,OAApB;;UASaC,W;AAGX,6BAAoBC,IAApB,EAAsC;AAAA;;AAAlB,eAAAA,IAAA,GAAAA,IAAA;AAFpB,eAAAC,OAAA,GAAU,YAAV;AAGQ,eAAAH,OAAA,GAAU,IAAII,OAAJ,CAAY;AAAE,4BAAgB;AAAlB,WAAZ,CAAV;AADiC;;;;iBAIzC,iBAAQtB,IAAR,EAAkB;AAEhB,mBAAO,KAAKoB,IAAL,CAAUG,IAAV,CAAqB,KAAKF,OAA1B,EAAmCrB,IAAnC,EAAyCiB,WAAzC,EACNO,IADM,CAEL,kEAAW,KAAKC,WAAhB,CAFK,CAAP;AAID;;;iBAID,oBAAQ;AACN,mBAAO,KAAKL,IAAL,CAAUM,GAAV,CAAsB,KAAKL,OAA3B,EAAoCG,IAApC,CACL,kEAAW,KAAKC,WAAhB,CADK,CAAP;AAEE;AACH;;;iBACD,iBAAQpC,EAAR,EAAkB;AAChB,mBAAO,KAAK+B,IAAL,CAAUM,GAAV,CAAoB,KAAKL,OAAL,GAAe,GAAf,GAAqBhC,EAAzC,EAA6CmC,IAA7C,CACL,kEAAW,KAAKC,WAAhB,CADK,CAAP;AAEE;AACH;;;iBACD,oBAAWpC,EAAX,EAAqB;AACnB,mBAAO,KAAK+B,IAAL,WAAuB,KAAKC,OAAL,GAAe,GAAf,GAAqBhC,EAA5C,EAA+C4B,WAA/C,EAA4DO,IAA5D,CACL,kEAAW,KAAKC,WAAhB,CADK,CAAP;AAGD;;;iBAED,oBAAWpC,EAAX,EAAsBW,IAAtB,EAAgC;AAE9B,mBAAO,KAAKoB,IAAL,CAAUG,IAAV,CAAqB,KAAKF,OAAL,GAAa,GAAb,GAAiBhC,EAAtC,EAA2CW,IAA3C,EAAiDiB,WAAjD,EACNO,IADM,CAGL,kEAAW,KAAKC,WAAhB,CAHK,CAAP;AAKD;;;iBAGO,qBAAYE,KAAZ,EAAsC;AAC5C,gBAAIA,KAAK,CAACA,KAAN,YAAuBC,UAA3B,EAAuC;AAErCxB,qBAAO,CAACuB,KAAR,CAAc,oBAAd,EAAoCA,KAAK,CAACA,KAAN,CAAYE,OAAhD;AACD,aAHD,MAGO;AAELzB,qBAAO,CAACuB,KAAR,CACE,UAAGA,KAAH,yBACcA,KAAK,CAACG,MADpB,iCAEgBH,KAAK,CAACA,KAFtB,CADF;AAID;;AAED,mBAAO,wDACL,+CADK,CAAP;AAED;;;;;;;yBAzDUR,W,EAAW,uH;AAAA,O;;;eAAXA,W;AAAW,iBAAXA,WAAW,K;AAAA,oBAFV;;;;;wEAEDA,W,EAAW;gBAHvB,wDAGuB;iBAHZ;AACVY,sBAAU,EAAE;AADF,W;AAGY,U;;;;;;;;;;;;;;;;;;;;;;AClBxB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;UAaaC,gB;AAIX,kCAAmBnD,SAAnB,EACkCC,IADlC,EAEUC,EAFV,EAGUC,WAHV,EAIUC,SAJV,EAIgC;AAAA;;AAJb,eAAAJ,SAAA,GAAAA,SAAA;AACe,eAAAC,IAAA,GAAAA,IAAA;AACxB,eAAAC,EAAA,GAAAA,EAAA;AACA,eAAAC,WAAA,GAAAA,WAAA;AACA,eAAAC,SAAA,GAAAA,SAAA;AALA,eAAAgD,WAAA,GAAc,IAAI,0DAAJ,EAAd;AAML;;;;iBAEL,oBAAW;AACT,iBAAK9C,SAAL;AACD;;;iBACD,qBAAY;AACV,iBAAK+C,WAAL,GAAmB,KAAKnD,EAAL,CAAQQ,KAAR,CAAc;AAC/BC,uBAAS,EAAE,CAAC,EAAD,EAAK,0DAAWC,QAAhB,CADoB;AAE/BC,sBAAQ,EAAE,CAAC,EAAD,EAAK,0DAAWD,QAAhB,CAFqB;AAG/BE,mBAAK,EAAE,CAAC,EAAD,EAAK,0DAAWF,QAAhB,CAHwB;AAI/B;AACAG,qBAAO,EAAE,CAAC,EAAD,EAAK,0DAAWH,QAAhB,CALsB,CAM/B;AACA;AACA;AACA;;AAT+B,aAAd,CAAnB;AAWD;;;iBACM,sBAAU;AAAA;;AACf,iBAAKO,IAAL,GAAYC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,KAAKgC,WAAL,CAAiB/B,KAAnC,CAAZ;AACA,iBAAKnB,WAAL,CAAiBmD,OAAjB,CAAyB,KAAKnC,IAA9B,EACGH,SADH,CACa,UAAAC,aAAa,EAAI;AAC1B,oBAAI,CAACmC,WAAL,CAAiB1B,IAAjB,CAAsB,MAAI,CAACP,IAA3B;;AACA,oBAAI,CAACnB,SAAL,CAAe2B,KAAf;;AACA,oBAAI,CAACvB,SAAL,CAAewB,IAAf,CAAoB,2BAApB,EAAiD,SAAjD,EAA4D;AAC1DC,wBAAQ,EAAE;AADgD,eAA5D;AAGD,aAPH;AAQD;;;iBACD,qBAAS;AACP,iBAAK7B,SAAL,CAAe2B,KAAf;AACD;;;;;;;yBAxCUwB,gB,EAAgB,sI,EAAA,gEAKjB,wEALiB,C,EAKF,2H,EAAA,mI,EAAA,wI;AAAA,O;;;cALdA,gB;AAAgB,iD;AAAA;AAAA;AAAA,S;AAAA,kB;AAAA,iB;AAAA,e;AAAA,sqB;AAAA;AAAA;ACb7B;;AACI;;AAAqB;;AAAY;;AAEjC;;AACE;;AACE;;AACE;;AAEF;;AACF;;AAGA;;AACE;;AACE;;AAEF;;AACF;;AAGA;;AACE;;AACE;;AAGF;;AACF;;AAOA;;AACE;;AACE;;AACF;;AACF;;AACA;;AACE;;AAAmB;AAAA,qBAAS,IAAAI,UAAA,EAAT;AAAqB,aAArB;;AAAuD;;AAAI;;AAC9E;;AAAmB;AAAA,qBAAS,IAAAzB,SAAA,EAAT;AAAoB,aAApB;;AAAoC;;AAAM;;AAC/D;;AACF;;AACF;;;;AAxCmC;;AAAA;;AAoCa;;AAAA;;;;;;;;;wED1BrCqB,gB,EAAgB;gBAN5B,uDAM4B;iBANlB;AACTpB,oBAAQ,EAAE,oBADD;AAETC,uBAAW,EAAE,yBAFJ;AAGTC,qBAAS,EAAE,CAAC,yBAAD;AAHF,W;AAMkB,U;;;;;;oBAKxB,oD;qBAAO,wE;;;;;;;;;;AAFAmB,qBAAW;kBAApB;AAAoB;;;;;;;;;;;;;;;;;;;AEhBvB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACmBM;;AAAuC;;AAAI;;;;;;AAC3C;;AAAwC;;AAAe;;;;;;AAAf;;AAAA;;;;;;AAGxC;;AAAuC;;AAAW;;;;;;AAClD;;AAAwC;;AAAsB;;;;;;AAAtB;;AAAA;;;;;;AAKxC;;AAAuC;;AAAU;;;;;;AACjD;;AAAwC;;AAAqB;;;;;;AAArB;;AAAA;;;;;;AAKxC;;AAAuC;;AAAO;;;;;;AAC9C;;AAAwC;;AAAkB;;;;;;AAAlB;;AAAA;;;;;;AAMxC;;AAAuC;;AAAQ;;;;;;AAC/C;;AAAwC;;AAAoB;;;;;;AAApB;;AAAA;;;;;;AAGxC;;AAEE;;AACF;;;;;;;;AAEA;;AACE;;AAAuC;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AACrC;;AAA4B;;AAAI;;AAAY;;AAC9C;;AAEA;;AAAuC;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAErC;;AAA+B;;AAAM;;AACvC;;AACA;;AACF;;;;;;AAEF;;;;;;AAEQ;;;;UDjDCI,Y;AAQX,8BAAoBrD,WAApB,EACSsD,MADT,EAEUC,GAFV,EAEkC;AAAA;;AAFd,eAAAvD,WAAA,GAAAA,WAAA;AACX,eAAAsD,MAAA,GAAAA,MAAA;AACC,eAAAC,GAAA,GAAAA,GAAA;AATV,eAAAC,KAAA,GAAQ,0BAAR;AACA,eAAAC,gBAAA,GAA6B,CAAC,IAAD,EAAO,WAAP,EAAoB,UAApB,EAAgC,OAAhC,EAAyC,SAAzC,EAAoD,SAApD,CAA7B;AAQqC;;;;iBAGrC,oBAAW;AACT,iBAAKC,QAAL;AAED;;;iBAED,qBAAYC,WAAZ,EAAiC;AAC/B,iBAAKC,UAAL,GAAkB,IAAI,0EAAJ,CAA4B,KAAKC,KAAjC,CAAlB;AACAF,uBAAW,GAAGA,WAAW,CAACG,IAAZ,EAAd,CAF+B,CAEG;;AAClCH,uBAAW,GAAGA,WAAW,CAACI,WAAZ,EAAd,CAH+B,CAGU;;AACzC,iBAAKH,UAAL,CAAgBI,MAAhB,GAAyBL,WAAzB;AACD;;;iBAED,mBAAO;AAAA;;AACL,gBAAM9D,SAAS,GAAG,KAAKyD,MAAL,CAAY7B,IAAZ,CAAiB,uFAAjB,CAAlB;AAEA,gBAAMwC,GAAG,GAAGpE,SAAS,CAACqE,iBAAV,CAA4BjB,WAA5B,CAAwCpC,SAAxC,CAAkD,UAACf,IAAD,EAAe;AAE3EA,kBAAI,CAACO,EAAL,GAAU,MAAI,CAACwD,KAAL,CAAWM,MAAX,GAAoB,CAA9B;;AACA,oBAAI,CAACN,KAAL,CAAWO,MAAX,CAAkB,CAAlB,EAAqB,CAArB,EAAwBtE,IAAxB;;AACA,oBAAI,CAACyD,GAAL,CAASc,aAAT;;AAEA,oBAAI,CAACT,UAAL,GAAkB,MAAI,CAACC,KAAvB;AACA,oBAAI,CAACD,UAAL,GAAkB,IAAI,0EAAJ,CAA4B,MAAI,CAACC,KAAjC,CAAlB;AACD,aARW,CAAZ;AASAhE,qBAAS,CAACyE,WAAV,GAAwBzD,SAAxB,CAAkC,UAAA0D,MAAM,EAAI,CAE3C,CAFD;AAGD;;;iBACD,oBAAWC,CAAX,EAAsBnE,EAAtB,EAAkC;AAAA;;AAChC,iBAAKA,EAAL,GAAUA,EAAV;AACA,gBAAMR,SAAS,GAAG,KAAKyD,MAAL,CAAY7B,IAAZ,CAAiB,0FAAjB,EAAoC;AACpD3B,kBAAI,EAAE;AAAEO,kBAAE,EAAEA;AAAN;AAD8C,aAApC,CAAlB;AAGA,gBAAM4D,GAAG,GAAGpE,SAAS,CAACqE,iBAAV,CAA4BhE,aAA5B,CAA0CW,SAA1C,CAAoD,UAACf,IAAD,EAAe;AAC7E,oBAAI,CAAC+D,KAAL,CAAWO,MAAX,CAAkBI,CAAlB,EAAqB,CAArB;;AACA1E,kBAAI,CAACO,EAAL,GAAU,MAAI,CAACA,EAAf;;AACA,oBAAI,CAACwD,KAAL,CAAWO,MAAX,CAAkBI,CAAlB,EAAqB,CAArB,EAAwB1E,IAAxB;;AACA,oBAAI,CAACyD,GAAL,CAASc,aAAT;;AACA,oBAAI,CAACT,UAAL,GAAkB,MAAI,CAACC,KAAvB;AACA,oBAAI,CAACD,UAAL,GAAkB,IAAI,0EAAJ,CAA4B,MAAI,CAACC,KAAjC,CAAlB;AACD,aAPW,CAAZ;AAQAhE,qBAAS,CAACyE,WAAV,GAAwBzD,SAAxB,CAAkC,UAAA0D,MAAM,EAAI;AAC1C,kBAAIA,MAAM,KAAK,CAAf,EAAkB,CAChB;AACD;AACF,aAJD;AAKD;;;iBACD,sBAAaC,CAAb,EAAwBnE,EAAxB,EAAoCG,SAApC,EAAuDE,QAAvD,EAAyEC,KAAzE,EAAwFC,OAAxF,EAAyG;AAAA;;AAEvG,gBAAMf,SAAS,GAAG,KAAKyD,MAAL,CAAY7B,IAAZ,CAAiB,gGAAjB,EAAsC;AACtD3B,kBAAI,EAAE;AAAEO,kBAAE,EAAEA,EAAN;AAAUG,yBAAS,EAAEA,SAArB;AAAgCE,wBAAQ,EAAEA,QAA1C;AAAoDC,qBAAK,EAAEA,KAA3D;AAAkEC,uBAAO,EAAEA;AAA3E;AADgD,aAAtC,CAAlB;AAIAf,qBAAS,CAACyE,WAAV,GAAwBzD,SAAxB,CAAkC,UAAA0D,MAAM,EAAI;AAC1C,kBAAIA,MAAM,KAAK,CAAf,EAAkB;AAChB;AACA,sBAAI,CAACV,KAAL,CAAWO,MAAX,CAAkBI,CAAlB,EAAqB,CAArB;;AACF,sBAAI,CAACjB,GAAL,CAASc,aAAT;;AACA,sBAAI,CAACT,UAAL,GAAkB,MAAI,CAACC,KAAvB;AACA,sBAAI,CAACD,UAAL,GAAkB,IAAI,0EAAJ,CAA4B,MAAI,CAACC,KAAjC,CAAlB;AACC;AAEF,aATD;AAUD;;;iBACD,oBAAQ;AAAA;;AACN,iBAAK7D,WAAL,CAAiB0D,QAAjB,GACG7C,SADH,CACa,UAAAC,aAAa,EAAI;AAC1B,oBAAI,CAAC+C,KAAL,GAAa/C,aAAb;AACA,oBAAI,CAAC8C,UAAL,GAAkB,MAAI,CAACC,KAAvB;AACA,oBAAI,CAACD,UAAL,CAAgBa,SAAhB,GAA4B,MAAI,CAACA,SAAjC;AACD,aALH;AAMD;;;;;;;yBApFUpB,Y,EAAY,uI,EAAA,mI,EAAA,gI;AAAA,O;;;cAAZA,Y;AAAY,iC;AAAA;AAAA;4EAYZ,wE,EAAc,I;;;;;;;;;;;;;;AC5B3B;;AAAgH;;AAAM;;AAAwB;;AAAO;;AAErJ;;AACE;;AACE;;AACE;;AAA4D;AAAA,qBAAS,IAAAF,OAAA,EAAT;AAAkB,aAAlB;;AAC1D;;AAA8D;;AAAG;;AAAY;;AAC/E;;AACF;;AACA;;AAGE;;AAAgB;AAAA,qBAAS,IAAAuB,WAAA,qBAAT;AAAyC,aAAzC;;AAAhB;;AACF;;AACF;;AACA;;AAGE;;AACE;;AACA;;AACF;;AACA;;AACE;;AACA;;AACF;;AAGA;;AACE;;AACA;;AACF;;AAGA;;AACE;;AACA;;AACF;;AAIA;;AACE;;AACA;;AACF;;AACA;;AACE;;AAKA;;AAWF;;AACA;;AAEQ;;AACV;;AAGF;;;;AAtDmB;;AAAA;;AAgDK;;AAAA;;AAEqB;;AAAA;;;;;;;;;wEDjDhCrB,Y,EAAY;gBANxB,uDAMwB;iBANd;AACTzB,oBAAQ,EAAE,UADD;AAETC,uBAAW,EAAE,oBAFJ;AAGTC,qBAAS,EAAE,CAAC,oBAAD;AAHF,W;AAMc,U;;;;;;;;;AAYoB2C,mBAAS,EAAE,CAAF;kBAAnD,uDAAmD;mBAAzC,wE,EAAc;AAAE,wBAAQ;AAAV,a;AAA2B,WAAE;;;;;;;;;;;;;;;;;;;AE5BxoGaE,S;;;;;cAAAA,S;AAAS,oBAFR,2DAEQ;;;;2BAATA,S;AAAS,S;AAAA,mBAHT,E;AAAE,kBA3CJ,CACP,uEADO,EAEP,oEAFO,EAGP,4FAHO,EAIP,0DAJO,EAKP,kEALO,EAMP,qEANO,EAOP,yFAA+BC,OAA/B,CAAuC,kEAAvC,CAPO,EASP,oFATO,EAUP,uEAVO,EAWP,oFAXO,EAYP,yEAZO,EAaP,sFAbO,EAcP,qEAdO,EAeP,6EAfO,EAgBP,uEAhBO,EAiBP,2EAjBO,EAkBP,iFAlBO,EAmBP,yEAnBO,EAoBP,2EApBO,EAqBP,+EArBO,EAsBP,8EAtBO,EAuBP,qEAvBO,EAwBP,uEAxBO,EAyBP,qEAzBO,EA0BP,qEA1BO,EA2BP,2EA3BO,EA4BP,+EA5BO,EA6BP,oFA7BO,EA8BP,4FA9BO,EA+BP,uEA/BO,EAgCP,uEAhCO,EAiCP,yEAjCO,EAkCP,2EAlCO,EAmCP,yEAnCO,EAoCP,oFApCO,EAqCP,8EArCO,EAsCP,qEAtCO,EAuCP,uEAvCO,EAwCP,2EAxCO,CA2CI;;;;4HAGFD,S,EAAS;AAAA,yBAnDlB,2DAmDkB,EAlDlB,wFAkDkB,EAjDlB,iGAiDkB,EAhDlB,2FAgDkB;AAhDD,oBAGjB,uEAHiB,EAIjB,oEAJiB,EAKjB,4FALiB,EAMjB,0DANiB,EAOjB,kEAPiB,EAQjB,qEARiB,EAQD,wFARC,EAWjB,oFAXiB,EAYjB,uEAZiB,EAajB,oFAbiB,EAcjB,yEAdiB,EAejB,sFAfiB,EAgBjB,qEAhBiB,EAiBjB,6EAjBiB,EAkBjB,uEAlBiB,EAmBjB,2EAnBiB,EAoBjB,iFApBiB,EAqBjB,yEArBiB,EAsBjB,2EAtBiB,EAuBjB,+EAvBiB,EAwBjB,8EAxBiB,EAyBjB,qEAzBiB,EA0BjB,uEA1BiB,EA2BjB,qEA3BiB,EA4BjB,qEA5BiB,EA6BjB,2EA7BiB,EA8BjB,+EA9BiB,EA+BjB,oFA/BiB,EAgCjB,4FAhCiB,EAiCjB,uEAjCiB,EAkCjB,uEAlCiB,EAmCjB,yEAnCiB,EAoCjB,2EApCiB,EAqCjB,yEArCiB,EAsCjB,oFAtCiB,EAuCjB,8EAvCiB,EAwCjB,qEAxCiB,EAyCjB,uEAzCiB,EA0CjB,2EA1CiB;AAgDC,S;AANF,O;;;;;wEAMPA,S,EAAS;gBArDrB,sDAqDqB;iBArDZ;AACRE,wBAAY,EAAE,CACZ,2DADY,EAEZ,wFAFY,EAGZ,iGAHY,EAIZ,2FAJY,CADN;AAORC,mBAAO,EAAE,CACP,uEADO,EAEP,oEAFO,EAGP,4FAHO,EAIP,0DAJO,EAKP,kEALO,EAMP,qEANO,EAOP,yFAA+BF,OAA/B,CAAuC,kEAAvC,CAPO,EASP,oFATO,EAUP,uEAVO,EAWP,oFAXO,EAYP,yEAZO,EAaP,sFAbO,EAcP,qEAdO,EAeP,6EAfO,EAgBP,uEAhBO,EAiBP,2EAjBO,EAkBP,iFAlBO,EAmBP,yEAnBO,EAoBP,2EApBO,EAqBP,+EArBO,EAsBP,8EAtBO,EAuBP,qEAvBO,EAwBP,uEAxBO,EAyBP,qEAzBO,EA0BP,qEA1BO,EA2BP,2EA3BO,EA4BP,+EA5BO,EA6BP,oFA7BO,EA8BP,4FA9BO,EA+BP,uEA/BO,EAgCP,uEAhCO,EAiCP,yEAjCO,EAkCP,2EAlCO,EAmCP,yEAnCO,EAoCP,oFApCO,EAqCP,8EArCO,EAsCP,qEAtCO,EAuCP,uEAvCO,EAwCP,2EAxCO,CAPD;AAkDRG,qBAAS,EAAE,EAlDH;AAmDRC,qBAAS,EAAE,CAAC,2DAAD;AAnDH,W;AAqDY,U;;;;;;;;;;;;;;;;;;AClGtB;AAAA;;;AAAA;AAAA;AAAA;;UAAaC,e;;;;;;;iBACX,oBAAW;AACT,gBAAMC,MAAM,GAAG,CACX;AACA,oBAAK,CADL;AAEA,2BAAY,QAFZ;AAGA,0BAAW,KAHX;AAIA,uBAAQ,kBAJR;AAKA,yBAAU;AALV,aADW,EAQX;AACA,oBAAK,CADL;AAEA,2BAAY,QAFZ;AAGA,0BAAW,IAHX;AAIA,uBAAQ,cAJR;AAKA,yBAAU;AALV,aARW,EAeX;AACA,oBAAK,CADL;AAEA,2BAAY,QAFZ;AAGA,0BAAW,IAHX;AAIA,uBAAQ,cAJR;AAKA,yBAAU;AALV,aAfW,EAsBX;AACA,oBAAK,CADL;AAEA,2BAAY,KAFZ;AAGA,0BAAW,KAHX;AAIA,uBAAQ,eAJR;AAKA,yBAAU;AALV,aAtBW,EA6BX;AACA,oBAAK,CADL;AAEA,2BAAY,KAFZ;AAGA,0BAAW,KAHX;AAIA,uBAAQ,eAJR;AAKA,yBAAU;AALV,aA7BW,CAAf;AAqCA,mBAAO;AAAEA,oBAAM,EAANA;AAAF,aAAP;AACD;;;;;;;;;;;;;;;;;;;;;AC1CH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;UAUaC,mB;AAEX,qCAAmBtF,SAAnB,EAC4CC,IAD5C,EAEmBE,WAFnB,EAGoBC,SAHpB,EAG4C;AAAA;;AAHzB,eAAAJ,SAAA,GAAAA,SAAA;AACyB,eAAAC,IAAA,GAAAA,IAAA;AACzB,eAAAE,WAAA,GAAAA,WAAA;AACC,eAAAC,SAAA,GAAAA,SAAA;AAA2B;;;;iBAE/C,qBAAS;AACP,iBAAKJ,SAAL,CAAe2B,KAAf;AACD;;;iBAED,yBAAa;AACX,iBAAKxB,WAAL,CAAiBoF,UAAjB,CAA4B,KAAKtF,IAAL,CAAUO,EAAtC;;AACA,iBAAKJ,SAAL,CAAewB,IAAf,CAAoB,2BAApB,EAAiD,SAAjD,EAA4D;AAC1DC,sBAAQ,EAAE;AADgD,aAA5D;AAGD;;;;;;;yBAhBUyD,mB,EAAmB,sI,EAAA,gEAGV,wEAHU,C,EAGK,mI,EAAA,wI;AAAA,O;;;cAHxBA,mB;AAAmB,oD;AAAA,kB;AAAA,iB;AAAA,e;AAAA,0N;AAAA;AAAA;ACVhC;;AACI;;AAAqB;;AAAa;;AAClC;;AACE;;AACA;;AACA;;AACA;;AACA;;AAEA;;AACA;;AACA;;AAEF;;AAEA;;AACE;;AAA0C;AAAA,qBAAS,IAAAE,aAAA,EAAT;AAAwB,aAAxB;;AAA0B;;AAAM;;AAC1E;;AAAmB;AAAA,qBAAS,IAAA1D,SAAA,EAAT;AAAoB,aAApB;;AAAoC;;AAAM;;AAC/D;;AACF;;;;AAhBI;;AAAA;;AAEA;;AAAA;;AAEA;;AAAA;;AAGA;;AAAA,oGAAAf,OAAA;;AAMmB;;AAAA;;;;;;;;;wEDNZuE,mB,EAAmB;gBAL/B,uDAK+B;iBALrB;AACPvD,oBAAQ,EAAE,uBADH;AAEPC,uBAAW,EAAE,4BAFN;AAGPC,qBAAS,EAAE,CAAC,4BAAD;AAHJ,W;AAKqB,U;;;;;;oBAGjB,oD;qBAAO,wE;;;;;;;;;;;;;;;;;;;;;;;;;AEbtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAIA,UAAMwD,MAAM,GAAW,EAAvB;;UAMaC,gB;;;;;cAAAA;;;;2BAAAA,gB;AAAgB,S;AAAA,kBAHlB,CAAC,6DAAaX,OAAb,CAAqBU,MAArB,CAAD,CAGkB,EAFjB,4DAEiB;;;;4HAAhBC,gB,EAAgB;AAAA;AAAA,oBAFjB,4DAEiB;AAAA,S;AAFL,O;;;;;wEAEXA,gB,EAAgB;gBAJ5B,sDAI4B;iBAJnB;AACRT,mBAAO,EAAE,CAAC,6DAAaF,OAAb,CAAqBU,MAArB,CAAD,CADD;AAERE,mBAAO,EAAE,CAAC,4DAAD;AAFD,W;AAImB,U;;;;;;;;;;;;;;;;;;ACV7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,UAAI,sEAAYxD,UAAhB,EAA4B;AAC1B;AACD;;AAED,kFAAyByD,eAAzB,CAAyC,yDAAzC,WACS,UAAAC,GAAG;AAAA,eAAItE,OAAO,CAACuB,KAAR,CAAc+C,GAAd,CAAJ;AAAA,OADZ;;;;;;;;;;;;;;;ACVA,eAASC,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,eAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,cAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,WAAC,CAACE,IAAF,GAAS,kBAAT;AACA,gBAAMF,CAAN;AACA,SAJM,CAAP;AAKA;;AACDL,8BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,eAAO,EAAP;AAAY,OAAzD;;AACAR,8BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,YAAM,CAACZ,OAAP,GAAiBG,wBAAjB;AACAA,8BAAwB,CAACtF,EAAzB,GAA8B,MAA9B","file":"main-es5.js","sourcesContent":["import { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { Component, OnInit, Inject, Input, Output, EventEmitter, } from '@angular/core';\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\nimport { User } from '../../models/user';\nimport { DataService } from '../../services/data.service';\nimport {MatSnackBar} from '@angular/material/snack-bar';\n\n@Component({\n    selector: 'edit-user.component',\n    templateUrl: 'edit-user.component.html',\n    styleUrls: ['edit-user.component.scss']\n})\n\nexport class EditUserComponent implements OnInit {\n    editUserForm: FormGroup;\n    user: User;\n    @Output() isUserUpdated = new EventEmitter();\n    constructor(public dialogRef: MatDialogRef<EditUserComponent>,\n        @Inject(MAT_DIALOG_DATA) public data: any,\n        private fb: FormBuilder,\n        private dataService: DataService,\n        private _snackBar: MatSnackBar\n    ) { }\n\n    ngOnInit() {\n\n        this.buildForm();\n        this.getUser(this.data.id);\n    }\n    buildForm() {\n        this.editUserForm = this.fb.group({\n            FirstName: ['', Validators.required],\n      LastName: ['', Validators.required],\n      Email: ['', Validators.required],\n      // phone: ['', Validators.required],\n      Address: ['', Validators.required]\n        });\n    }\n    public getUser(id: number): void {\n        this.dataService.getUser(id)\n            .subscribe(serviceResult => {\n                this.editUserForm.patchValue(serviceResult);\n            });\n    }\n    public updateUser(): void {\n        this.user = Object.assign({}, this.editUserForm.value);\n        console.log(this.user);\n        console.log(this.data.id);\n\n        this.dataService.updateUser(this.data.id, this.user)\n            .subscribe(serviceResult => {\n                console.log(serviceResult);\n                this.isUserUpdated.emit(this.user);\n                this.dialogRef.close();\n                this._snackBar.open('User updated succesfully.', 'updated', {\n                    duration: 2000,\n                  });\n\n            });\n    }\n    onNoClick(): void {\n        this.dialogRef.close();\n    }\n}\n","<div class=\"container\">\n    <h3 mat-dialog-title>Update User</h3>\n  \n    <form class=\"mat-dialog-content\" [formGroup]=\"editUserForm\"  autocomplete=\"off\">\n      <div class=\"form\">\n        <mat-form-field color=\"accent\">\n          <input matInput class=\"form-control\" placeholder=\"First Name\" formControlName=\"FirstName\" >\n          <!-- <mat-error *ngIf=\"formControl.invalid\">{{getErrorMessage()}}</mat-error> -->\n        </mat-form-field>\n      </div>\n  \n      <!--Textarea for demo purposes-->\n      <div class=\"form\">\n        <mat-form-field color=\"accent\">\n          <input matInput class=\"form-control\" placeholder=\"Last Name\" formControlName=\"LastName\">\n          <!-- <mat-error *ngIf=\"formControl.invalid\">{{getErrorMessage()}}</mat-error> -->\n        </mat-form-field>\n      </div>\n  \n      <!--Contains mat-hint for characters count and has maxLengt set-->\n      <div class=\"form\">\n        <mat-form-field color=\"accent\">\n          <input matInput class=\"form-control\" placeholder=\"E-mail\" formControlName=\"Email\">\n          <!-- <mat-error *ngIf=\"formControl.invalid\">{{getErrorMessage()}}</mat-error>\n          <mat-hint align=\"end\">{{inputstate.value?.length || 0}}/10</mat-hint> -->\n        </mat-form-field>\n      </div>\n  \n      \n      <div class=\"form\">\n        <mat-form-field color=\"accent\">\n          <input matInput class=\"form-control\" placeholder=\"Address\" formControlName=\"Address\" name=\"Address\">\n        </mat-form-field>\n      </div>\n      <div mat-dialog-actions>\n        <button mat-button (click)=\"updateUser()\" [disabled]=\"!editUserForm.valid\">Update</button>\n        <button mat-button (click)=\"onNoClick()\" tabindex=\"-1\">Cancel</button>\n      </div>\n    </form>\n  </div>\n  ","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable, Output, EventEmitter } from '@angular/core';\nimport { HttpClient, HttpParams, HttpErrorResponse } from '@angular/common/http';\nimport { HttpHeaders } from '@angular/common/http';\n\nimport { User } from '../models/user';\n\nimport { Observable, throwError } from 'rxjs';\nimport { catchError , retry} from 'rxjs/operators';\n\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json',\n    'Authorization': 'my-auth-token'\n  })\n};\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n  baseUrl = 'api/sample';\n  \n  constructor(private http: HttpClient) { }\n  private headers = new Headers({ 'Content-Type': 'application/json' });\n  \n\n  addUser(user: User): Observable<User> {\n   \n    return this.http.post<User>(this.baseUrl, user, httpOptions)\n    .pipe(\n      catchError(this.handleError)\n    );\n  }\n  \n\n  \n  getUsers(): Observable<User[]> {\n    return this.http.get<User[]>(this.baseUrl).pipe(\n      catchError(this.handleError)\n    );;\n  }\n  getUser(id: number): Observable<User> {\n    return this.http.get<User>(this.baseUrl + '/' + id).pipe(\n      catchError(this.handleError)\n    );;\n  }\n  deleteUser(id: number): Observable<User> {\n    return this.http.delete<User>(this.baseUrl + '/' + id,httpOptions).pipe(\n      catchError(this.handleError)\n    );\n  }\n  \n  updateUser(id: number,user: User): Observable<User> {\n   \n    return this.http.post<User>(this.baseUrl+'/'+id , user, httpOptions)\n    .pipe(\n    \n      catchError(this.handleError)\n    );\n  }\n  \n  \n  private handleError(error: HttpErrorResponse) {\n    if (error.error instanceof ErrorEvent) {\n    \n      console.error('An error occurred:', error.error.message);\n    } else {\n      \n      console.error(\n        `${error}` +\n        `error code ${error.status}, ` +\n        `error body : ${error.error}`);\n    }\n   \n    return throwError(\n      'Something went wrong; please try again later.');\n  };\n\n}","import { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { Component, OnInit, Inject, Input, Output, EventEmitter, } from '@angular/core';\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\nimport { User } from '../../models/user';\nimport { DataService } from '../../services/data.service';\nimport {MatSnackBar} from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'add-user.component',\n  templateUrl: 'add-user.component.html',\n  styleUrls: ['add-user.component.scss']\n})\n\nexport class AddUserComponent implements OnInit {\n  addUserForm: FormGroup;\n  user: User;\n  @Output() isUserAdded = new EventEmitter();\n  constructor(public dialogRef: MatDialogRef<AddUserComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    private fb: FormBuilder,\n    private dataService: DataService,\n    private _snackBar: MatSnackBar\n  ) { }\n\n  ngOnInit() {\n    this.buildForm();\n  }\n  buildForm() {\n    this.addUserForm = this.fb.group({\n      FirstName: ['', Validators.required],\n      LastName: ['', Validators.required],\n      Email: ['', Validators.required],\n      // phone: ['', Validators.required],\n      Address: ['', Validators.required]\n      // this.fb.group({ // make a nested group\n      //   city: ['', Validators.required],\n      //   zipcode: ['', Validators.required],\n      // }),\n    });\n  }\n  public addNewUser(): void {\n    this.user = Object.assign({}, this.addUserForm.value);\n    this.dataService.addUser(this.user)\n      .subscribe(serviceResult => {\n        this.isUserAdded.emit(this.user);\n        this.dialogRef.close();\n        this._snackBar.open('User created succesfully.', 'Created', {\n          duration: 2000,\n        });\n      });\n  }\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n}\n","<div class=\"container\">\n    <h3 mat-dialog-title>Add New User</h3>\n  \n    <form class=\"mat-dialog-content\" [formGroup]=\"addUserForm\"  autocomplete=\"off\">\n      <div class=\"form\">\n        <mat-form-field color=\"accent\">\n          <input matInput class=\"form-control\" placeholder=\"First Name\" formControlName=\"FirstName\" >\n          <!-- <mat-error *ngIf=\"formControl.invalid\">{{getErrorMessage()}}</mat-error> -->\n        </mat-form-field>\n      </div>\n  \n      <!--Textarea for demo purposes-->\n      <div class=\"form\">\n        <mat-form-field color=\"accent\">\n          <input matInput class=\"form-control\" placeholder=\"Last Name\" formControlName=\"LastName\">\n          <!-- <mat-error *ngIf=\"formControl.invalid\">{{getErrorMessage()}}</mat-error> -->\n        </mat-form-field>\n      </div>\n  \n      <!--Contains mat-hint for characters count and has maxLengt set-->\n      <div class=\"form\">\n        <mat-form-field color=\"accent\">\n          <input matInput class=\"form-control\" placeholder=\"E-mail\" formControlName=\"Email\">\n          <!-- <mat-error *ngIf=\"formControl.invalid\">{{getErrorMessage()}}</mat-error>\n          <mat-hint align=\"end\">{{inputstate.value?.length || 0}}/10</mat-hint> -->\n        </mat-form-field>\n      </div>\n  \n      <!-- <div class=\"form\">\n        <mat-form-field color=\"accent\">\n          <input matInput class=\"form-control\" placeholder=\"Phone\" formControlName=\"phone\">\n        </mat-form-field>\n      </div> -->\n      <div class=\"form\">\n        <mat-form-field color=\"accent\">\n          <input matInput class=\"form-control\" placeholder=\"Address\" formControlName=\"Address\" name=\"Address\">\n        </mat-form-field>\n      </div>\n      <div mat-dialog-actions>\n        <button mat-button (click)=\"addNewUser()\" [disabled]=\"!addUserForm.valid\">Save</button>\n        <button mat-button (click)=\"onNoClick()\" tabindex=\"-1\">Cancel</button>\n      </div> \n    </form>\n  </div>\n  ","import { Component, OnInit, ViewChild, ChangeDetectorRef } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatTableDataSource } from '@angular/material/table'\nimport { User } from '../app/models/user';\nimport { DataService } from '../app/services/data.service';\nimport { AddUserComponent } from '../app/users/add-user/add-user.component'\nimport { DeleteUserComponent } from '../app/users/delete-user/delete-user.component'\nimport { EditUserComponent } from '../app/users/edit-user/edit-user.component'\n\n@Component({\n  selector: 'app-root',\n  templateUrl: 'app.component.html',\n  styleUrls: ['app.component.scss']\n})\n\nexport class AppComponent implements OnInit {\n  title = 'Angular11-DataTable-CRUD';\n  displayedColumns: string[] = ['id', 'FirstName', 'LastName', 'Email', 'Address', 'actions'];\n  dataSource: any;\n  users: User[];\n  user: User;\n  index: number;\n  id: number;\n  constructor(private dataService: DataService,\n    public dialog: MatDialog,\n    private ref: ChangeDetectorRef) { }\n\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n  ngOnInit() {\n    this.getUsers();\n\n  }\n\n  applyFilter(filterValue: string) {\n    this.dataSource = new MatTableDataSource<any>(this.users);\n    filterValue = filterValue.trim(); // Remove whitespace\n    filterValue = filterValue.toLowerCase(); // MatTableDataSource defaults to lowercase matches\n    this.dataSource.filter = filterValue;\n  }\n  \n  addUser(): void {\n    const dialogRef = this.dialog.open(AddUserComponent\n    );\n    const sub = dialogRef.componentInstance.isUserAdded.subscribe((data: any) => {\n\n      data.id = this.users.length + 1;\n      this.users.splice(0, 0, data);\n      this.ref.detectChanges();\n\n      this.dataSource = this.users;\n      this.dataSource = new MatTableDataSource<any>(this.users);\n    });\n    dialogRef.afterClosed().subscribe(result => {\n\n    });\n  }\n  editDialog(i: number, id: number) {\n    this.id = id;\n    const dialogRef = this.dialog.open(EditUserComponent, {\n      data: { id: id }\n    });\n    const sub = dialogRef.componentInstance.isUserUpdated.subscribe((data: any) => {\n      this.users.splice(i, 1);\n      data.id = this.id;\n      this.users.splice(i, 0, data);\n      this.ref.detectChanges();\n      this.dataSource = this.users;\n      this.dataSource = new MatTableDataSource<any>(this.users);\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      if (result === 1) {\n        //do something on success\n      }\n    });\n  }\n  deleteDialog(i: number, id: number, FirstName: string, LastName: string, Email: string, Address: string) {\n\n    const dialogRef = this.dialog.open(DeleteUserComponent, {\n      data: { id: id, FirstName: FirstName, LastName: LastName, Email: Email, Address: Address }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result === 1) {\n        //do something on success\n        this.users.splice(i, 1);\n      this.ref.detectChanges();\n      this.dataSource = this.users;\n      this.dataSource = new MatTableDataSource<any>(this.users);\n      }\n      \n    });\n  }\n  getUsers(): void {\n    this.dataService.getUsers()\n      .subscribe(serviceResult => {\n        this.users = serviceResult;\n        this.dataSource = this.users;\n        this.dataSource.paginator = this.paginator;\n      });\n  }\n}\n","<mat-toolbar color=\"primary\" style=\"background: linear-gradient(to left, #036ff4 0%, #001fff 90%) !important;\"> <span>Angular11 DataTable CRUD</span></mat-toolbar>\n\n<div class=\"mat-elevation-z8\">\n  <div class=\"example-header\">\n    <ng-container >\n      <button mat-icon-button color=\"primary\" style=\"margin: 2%;\" (click)=\"addUser()\">\n        <mat-icon aria-label=\"Example icon-button with a heart icon\" >add</mat-icon> Add User\n      </button>\n    </ng-container>\n    <mat-form-field style=\"float: right;\n    padding: 2%;\">\n   \n      <input matInput (keyup)=\"applyFilter($event.target.value)\" placeholder=\"Filter\">\n    </mat-form-field>\n  </div> \n  <table mat-table [dataSource]=\"dataSource\" style=\"margin-left: 5%;\">\n\n    <!-- Position Column -->\n    <ng-container matColumnDef=\"id\">\n      <th mat-header-cell *matHeaderCellDef> Id. </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.id}} </td>\n    </ng-container>\n    <ng-container matColumnDef=\"FirstName\">\n      <th mat-header-cell *matHeaderCellDef> First Name </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.FirstName}} </td>\n    </ng-container>\n\n    <!-- Name Column -->\n    <ng-container matColumnDef=\"LastName\">\n      <th mat-header-cell *matHeaderCellDef> Last Name </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.LastName}} </td>\n    </ng-container>\n\n    <!-- Weight Column -->\n    <ng-container matColumnDef=\"Email\">\n      <th mat-header-cell *matHeaderCellDef> E-mail </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.Email}} </td>\n    </ng-container>\n\n    <!-- Symbol Column -->\n    \n    <ng-container matColumnDef=\"Address\">\n      <th mat-header-cell *matHeaderCellDef> Address </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.Address}} </td>\n    </ng-container>\n    <ng-container matColumnDef=\"actions\">\n      <mat-header-cell *matHeaderCellDef style=\"margin-top: 5%;\n      margin-left: 3%;\">\n        Actions\n      </mat-header-cell>\n\n      <mat-cell *matCellDef=\"let row; let i=index;\">\n        <button mat-icon-button color=\"accent\" (click)=\"editDialog(i,row.id)\">\n          <mat-icon aria-label=\"Edit\">edit</mat-icon> Edit\n        </button>\n\n        <button mat-icon-button color=\"accent\" (click)=\"deleteDialog(i,row.id,row.FirstName, row.LastName, row.Email,row.Address)\">\n          <!-- <mat-icon aria-label=\"Delete\" (click)=\"deleteDialog(i, 1, row.name, row.username, row.email,row.phone,row.city,row.zipcode)\">delete</mat-icon> -->\n          <mat-icon aria-label=\"Delete\" >delete</mat-icon>\n        Delete\n        </button>\n      </mat-cell>\n    </ng-container>\n    <tr mat-header-row *matHeaderRowDef=\" displayedColumns\">\n            </tr>\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n  </table>\n\n \n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { HttpClientInMemoryWebApiModule } from 'angular-in-memory-web-api';\nimport { InMemoryService } from './in-memory.service';\n\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatNativeDateModule, MatRippleModule } from '@angular/material/core';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatToolbarModule } from '@angular/material/toolbar';\n\n\nimport {AddUserComponent} from '../app/users/add-user/add-user.component';\nimport {DeleteUserComponent} from '../app/users/delete-user/delete-user.component';\nimport {EditUserComponent} from '../app/users/edit-user/edit-user.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AddUserComponent,\n    DeleteUserComponent,\n    EditUserComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    HttpClientInMemoryWebApiModule.forRoot(InMemoryService),\n  \n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatStepperModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatToolbarModule,\n     \n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { InMemoryDbService } from 'angular-in-memory-web-api';\r\n\r\nexport class InMemoryService implements InMemoryDbService {\r\n  createDb() {\r\n    const sample = [\r\n        {\r\n        \"id\":1,\r\n        \"FirstName\":\"Nelson\",\r\n        \"LastName\":\"Dez\",\r\n        \"Email\":\"nelson@gmail.com\",\r\n        \"Address\":\"IN\"\r\n        },\r\n        {\r\n        \"id\":2,\r\n        \"FirstName\":\"Tassel\",\r\n        \"LastName\":\"Ro\",\r\n        \"Email\":\"ro@gmail.com\",\r\n        \"Address\":\"EU\"\r\n        },\r\n        {\r\n        \"id\":3,\r\n        \"FirstName\":\"Andrew\",\r\n        \"LastName\":\"Tc\",\r\n        \"Email\":\"tc@gmail.com\",\r\n        \"Address\":\"UK\"\r\n        },\r\n        {\r\n        \"id\":4,\r\n        \"FirstName\":\"Den\",\r\n        \"LastName\":\"Roy\",\r\n        \"Email\":\"den@gmail.com\",\r\n        \"Address\":\"GE\"\r\n        },\r\n        {\r\n        \"id\":5,\r\n        \"FirstName\":\"Fiz\",\r\n        \"LastName\":\"Ijo\",\r\n        \"Email\":\"fiz@gmail.com\",\r\n        \"Address\":\"NE\"\r\n        }\r\n      ];\r\n    return { sample };\r\n  }\r\n}","import { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport {Component, Inject} from '@angular/core';\nimport { DataService } from '../../services/data.service';\nimport {MatSnackBar} from '@angular/material/snack-bar';\n\n@Component({\n    selector: 'delete-user.component',\n    templateUrl: 'delete-user.component.html',\n    styleUrls: ['delete-user.component.scss']\n})\nexport class DeleteUserComponent {\n\n  constructor(public dialogRef: MatDialogRef<DeleteUserComponent>,\n              @Inject(MAT_DIALOG_DATA) public data: any, \n              public dataService: DataService,\n              private _snackBar: MatSnackBar) { }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  confirmDelete(): void {\n    this.dataService.deleteUser(this.data.id);\n    this._snackBar.open('User deleted succesfully.', 'deleted', {\n      duration: 2000,\n    });\n  }\n}\n","<div class=\"container\">\n    <h3 mat-dialog-title>Are you sure?</h3>\n    <div mat-dialog-content>\n      First Name: {{data.FirstName}}\n      <p></p>\n      Last Name: {{data.LastName}}\n      <p></p>\n      E-mail: {{data.Email}}\n      \n      <p></p>\n      Address: {{data.Address}}\n      <p></p>\n      \n    </div>\n  \n    <div mat-dialog-actions>\n      <button mat-button [mat-dialog-close]=\"1\" (click)=\"confirmDelete()\">Delete</button>\n      <button mat-button (click)=\"onNoClick()\" tabindex=\"-1\">Cancel</button>\n    </div>\n  </div>\n  ","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}