{"version":3,"sources":["./src/app/users/edit-user/edit-user.component.ts","./src/app/users/edit-user/edit-user.component.html","./src/environments/environment.ts","./src/app/services/data.service.ts","./src/app/users/add-user/add-user.component.ts","./src/app/users/add-user/add-user.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/in-memory.service.ts","./src/app/users/delete-user/delete-user.component.ts","./src/app/users/delete-user/delete-user.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["import { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { Component, OnInit, Inject, Input, Output, EventEmitter, } from '@angular/core';\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\nimport { User } from '../../models/user';\nimport { DataService } from '../../services/data.service';\nimport {MatSnackBar} from '@angular/material/snack-bar';\n\n@Component({\n    selector: 'edit-user.component',\n    templateUrl: 'edit-user.component.html',\n    styleUrls: ['edit-user.component.scss']\n})\n\nexport class EditUserComponent implements OnInit {\n    editUserForm: FormGroup;\n    user: User;\n    @Output() isUserUpdated = new EventEmitter();\n    constructor(public dialogRef: MatDialogRef<EditUserComponent>,\n        @Inject(MAT_DIALOG_DATA) public data: any,\n        private fb: FormBuilder,\n        private dataService: DataService,\n        private _snackBar: MatSnackBar\n    ) { }\n\n    ngOnInit() {\n\n        this.buildForm();\n        this.getUser(this.data.id);\n    }\n    buildForm() {\n        this.editUserForm = this.fb.group({\n            FirstName: ['', Validators.required],\n      LastName: ['', Validators.required],\n      Email: ['', Validators.required],\n      // phone: ['', Validators.required],\n      Address: ['', Validators.required]\n        });\n    }\n    public getUser(id: number): void {\n        this.dataService.getUser(id)\n            .subscribe(serviceResult => {\n                this.editUserForm.patchValue(serviceResult);\n            });\n    }\n    public updateUser(): void {\n        this.user = Object.assign({}, this.editUserForm.value);\n        console.log(this.user);\n        console.log(this.data.id);\n\n        this.dataService.updateUser(this.data.id, this.user)\n            .subscribe(serviceResult => {\n                console.log(serviceResult);\n                this.isUserUpdated.emit(this.user);\n                this.dialogRef.close();\n                this._snackBar.open('User updated succesfully.', 'updated', {\n                    duration: 2000,\n                  });\n\n            });\n    }\n    onNoClick(): void {\n        this.dialogRef.close();\n    }\n}\n","<div class=\"container\">\n    <h3 mat-dialog-title>Update User</h3>\n  \n    <form class=\"mat-dialog-content\" [formGroup]=\"editUserForm\"  autocomplete=\"off\">\n      <div class=\"form\">\n        <mat-form-field color=\"accent\">\n          <input matInput class=\"form-control\" placeholder=\"First Name\" formControlName=\"FirstName\" >\n          <!-- <mat-error *ngIf=\"formControl.invalid\">{{getErrorMessage()}}</mat-error> -->\n        </mat-form-field>\n      </div>\n  \n      <!--Textarea for demo purposes-->\n      <div class=\"form\">\n        <mat-form-field color=\"accent\">\n          <input matInput class=\"form-control\" placeholder=\"Last Name\" formControlName=\"LastName\">\n          <!-- <mat-error *ngIf=\"formControl.invalid\">{{getErrorMessage()}}</mat-error> -->\n        </mat-form-field>\n      </div>\n  \n      <!--Contains mat-hint for characters count and has maxLengt set-->\n      <div class=\"form\">\n        <mat-form-field color=\"accent\">\n          <input matInput class=\"form-control\" placeholder=\"E-mail\" formControlName=\"Email\">\n          <!-- <mat-error *ngIf=\"formControl.invalid\">{{getErrorMessage()}}</mat-error>\n          <mat-hint align=\"end\">{{inputstate.value?.length || 0}}/10</mat-hint> -->\n        </mat-form-field>\n      </div>\n  \n      \n      <div class=\"form\">\n        <mat-form-field color=\"accent\">\n          <input matInput class=\"form-control\" placeholder=\"Address\" formControlName=\"Address\" name=\"Address\">\n        </mat-form-field>\n      </div>\n      <div mat-dialog-actions>\n        <button mat-button (click)=\"updateUser()\" [disabled]=\"!editUserForm.valid\">Update</button>\n        <button mat-button (click)=\"onNoClick()\" tabindex=\"-1\">Cancel</button>\n      </div>\n    </form>\n  </div>\n  ","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable, Output, EventEmitter } from '@angular/core';\nimport { HttpClient, HttpParams, HttpErrorResponse } from '@angular/common/http';\nimport { HttpHeaders } from '@angular/common/http';\n\nimport { User } from '../models/user';\n\nimport { Observable, throwError } from 'rxjs';\nimport { catchError , retry} from 'rxjs/operators';\n\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json',\n    'Authorization': 'my-auth-token'\n  })\n};\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n  baseUrl = 'api/sample';\n  \n  constructor(private http: HttpClient) { }\n  private headers = new Headers({ 'Content-Type': 'application/json' });\n  \n\n  addUser(user: User): Observable<User> {\n   \n    return this.http.post<User>(this.baseUrl, user, httpOptions)\n    .pipe(\n      catchError(this.handleError)\n    );\n  }\n  \n\n  \n  getUsers(): Observable<User[]> {\n    return this.http.get<User[]>(this.baseUrl).pipe(\n      catchError(this.handleError)\n    );;\n  }\n  getUser(id: number): Observable<User> {\n    return this.http.get<User>(this.baseUrl + '/' + id).pipe(\n      catchError(this.handleError)\n    );;\n  }\n  deleteUser(id: number): Observable<User> {\n    return this.http.delete<User>(this.baseUrl + '/' + id,httpOptions).pipe(\n      catchError(this.handleError)\n    );\n  }\n  \n  updateUser(id: number,user: User): Observable<User> {\n   \n    return this.http.post<User>(this.baseUrl+'/'+id , user, httpOptions)\n    .pipe(\n    \n      catchError(this.handleError)\n    );\n  }\n  \n  \n  private handleError(error: HttpErrorResponse) {\n    if (error.error instanceof ErrorEvent) {\n    \n      console.error('An error occurred:', error.error.message);\n    } else {\n      \n      console.error(\n        `${error}` +\n        `error code ${error.status}, ` +\n        `error body : ${error.error}`);\n    }\n   \n    return throwError(\n      'Something went wrong; please try again later.');\n  };\n\n}","import { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { Component, OnInit, Inject, Input, Output, EventEmitter, } from '@angular/core';\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\nimport { User } from '../../models/user';\nimport { DataService } from '../../services/data.service';\nimport {MatSnackBar} from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'add-user.component',\n  templateUrl: 'add-user.component.html',\n  styleUrls: ['add-user.component.scss']\n})\n\nexport class AddUserComponent implements OnInit {\n  addUserForm: FormGroup;\n  user: User;\n  @Output() isUserAdded = new EventEmitter();\n  constructor(public dialogRef: MatDialogRef<AddUserComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    private fb: FormBuilder,\n    private dataService: DataService,\n    private _snackBar: MatSnackBar\n  ) { }\n\n  ngOnInit() {\n    this.buildForm();\n  }\n  buildForm() {\n    this.addUserForm = this.fb.group({\n      FirstName: ['', Validators.required],\n      LastName: ['', Validators.required],\n      Email: ['', Validators.required],\n      // phone: ['', Validators.required],\n      Address: ['', Validators.required]\n      // this.fb.group({ // make a nested group\n      //   city: ['', Validators.required],\n      //   zipcode: ['', Validators.required],\n      // }),\n    });\n  }\n  public addNewUser(): void {\n    this.user = Object.assign({}, this.addUserForm.value);\n    this.dataService.addUser(this.user)\n      .subscribe(serviceResult => {\n        this.isUserAdded.emit(this.user);\n        this.dialogRef.close();\n        this._snackBar.open('User created succesfully.', 'Created', {\n          duration: 2000,\n        });\n      });\n  }\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n}\n","<div class=\"container\">\n    <h3 mat-dialog-title>Add New User</h3>\n  \n    <form class=\"mat-dialog-content\" [formGroup]=\"addUserForm\"  autocomplete=\"off\">\n      <div class=\"form\">\n        <mat-form-field color=\"accent\">\n          <input matInput class=\"form-control\" placeholder=\"First Name\" formControlName=\"FirstName\" >\n          <!-- <mat-error *ngIf=\"formControl.invalid\">{{getErrorMessage()}}</mat-error> -->\n        </mat-form-field>\n      </div>\n  \n      <!--Textarea for demo purposes-->\n      <div class=\"form\">\n        <mat-form-field color=\"accent\">\n          <input matInput class=\"form-control\" placeholder=\"Last Name\" formControlName=\"LastName\">\n          <!-- <mat-error *ngIf=\"formControl.invalid\">{{getErrorMessage()}}</mat-error> -->\n        </mat-form-field>\n      </div>\n  \n      <!--Contains mat-hint for characters count and has maxLengt set-->\n      <div class=\"form\">\n        <mat-form-field color=\"accent\">\n          <input matInput class=\"form-control\" placeholder=\"E-mail\" formControlName=\"Email\">\n          <!-- <mat-error *ngIf=\"formControl.invalid\">{{getErrorMessage()}}</mat-error>\n          <mat-hint align=\"end\">{{inputstate.value?.length || 0}}/10</mat-hint> -->\n        </mat-form-field>\n      </div>\n  \n      <!-- <div class=\"form\">\n        <mat-form-field color=\"accent\">\n          <input matInput class=\"form-control\" placeholder=\"Phone\" formControlName=\"phone\">\n        </mat-form-field>\n      </div> -->\n      <div class=\"form\">\n        <mat-form-field color=\"accent\">\n          <input matInput class=\"form-control\" placeholder=\"Address\" formControlName=\"Address\" name=\"Address\">\n        </mat-form-field>\n      </div>\n      <div mat-dialog-actions>\n        <button mat-button (click)=\"addNewUser()\" [disabled]=\"!addUserForm.valid\">Save</button>\n        <button mat-button (click)=\"onNoClick()\" tabindex=\"-1\">Cancel</button>\n      </div> \n    </form>\n  </div>\n  ","import { Component, OnInit, ViewChild, ChangeDetectorRef } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatTableDataSource } from '@angular/material/table'\nimport { User } from '../app/models/user';\nimport { DataService } from '../app/services/data.service';\nimport { AddUserComponent } from '../app/users/add-user/add-user.component'\nimport { DeleteUserComponent } from '../app/users/delete-user/delete-user.component'\nimport { EditUserComponent } from '../app/users/edit-user/edit-user.component'\n\n@Component({\n  selector: 'app-root',\n  templateUrl: 'app.component.html',\n  styleUrls: ['app.component.scss']\n})\n\nexport class AppComponent implements OnInit {\n  title = 'Angular11-DataTable-CRUD';\n  displayedColumns: string[] = ['id', 'FirstName', 'LastName', 'Email', 'Address', 'actions'];\n  dataSource: any;\n  users: User[];\n  user: User;\n  index: number;\n  id: number;\n  constructor(private dataService: DataService,\n    public dialog: MatDialog,\n    private ref: ChangeDetectorRef) { }\n\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n  ngOnInit() {\n    this.getUsers();\n\n  }\n\n  applyFilter(filterValue: string) {\n    this.dataSource = new MatTableDataSource<any>(this.users);\n    filterValue = filterValue.trim(); // Remove whitespace\n    filterValue = filterValue.toLowerCase(); // MatTableDataSource defaults to lowercase matches\n    this.dataSource.filter = filterValue;\n  }\n  \n  addUser(): void {\n    const dialogRef = this.dialog.open(AddUserComponent\n    );\n    const sub = dialogRef.componentInstance.isUserAdded.subscribe((data: any) => {\n\n      data.id = this.users.length + 1;\n      this.users.splice(0, 0, data);\n      this.ref.detectChanges();\n\n      this.dataSource = this.users;\n      this.dataSource = new MatTableDataSource<any>(this.users);\n    });\n    dialogRef.afterClosed().subscribe(result => {\n\n    });\n  }\n  editDialog(i: number, id: number) {\n    this.id = id;\n    const dialogRef = this.dialog.open(EditUserComponent, {\n      data: { id: id }\n    });\n    const sub = dialogRef.componentInstance.isUserUpdated.subscribe((data: any) => {\n      this.users.splice(i, 1);\n      data.id = this.id;\n      this.users.splice(i, 0, data);\n      this.ref.detectChanges();\n      this.dataSource = this.users;\n      this.dataSource = new MatTableDataSource<any>(this.users);\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      if (result === 1) {\n        //do something on success\n      }\n    });\n  }\n  deleteDialog(i: number, id: number, FirstName: string, LastName: string, Email: string, Address: string) {\n\n    const dialogRef = this.dialog.open(DeleteUserComponent, {\n      data: { id: id, FirstName: FirstName, LastName: LastName, Email: Email, Address: Address }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result === 1) {\n        //do something on success\n        this.users.splice(i, 1);\n      this.ref.detectChanges();\n      this.dataSource = this.users;\n      this.dataSource = new MatTableDataSource<any>(this.users);\n      }\n      \n    });\n  }\n  getUsers(): void {\n    this.dataService.getUsers()\n      .subscribe(serviceResult => {\n        this.users = serviceResult;\n        this.dataSource = this.users;\n        this.dataSource.paginator = this.paginator;\n      });\n  }\n}\n","<mat-toolbar color=\"primary\" style=\"background: linear-gradient(to left, #036ff4 0%, #001fff 90%) !important;\"> <span>Angular11 DataTable CRUD</span></mat-toolbar>\n\n<div class=\"mat-elevation-z8\">\n  <div class=\"example-header\">\n    <ng-container >\n      <button mat-icon-button color=\"primary\" style=\"margin: 2%;\" (click)=\"addUser()\">\n        <mat-icon aria-label=\"Example icon-button with a heart icon\" >add</mat-icon> Add User\n      </button>\n    </ng-container>\n    <mat-form-field style=\"float: right;\n    padding: 2%;\">\n   \n      <input matInput (keyup)=\"applyFilter($event.target.value)\" placeholder=\"Filter\">\n    </mat-form-field>\n  </div> \n  <table mat-table [dataSource]=\"dataSource\" style=\"margin-left: 5%;\">\n\n    <!-- Position Column -->\n    <ng-container matColumnDef=\"id\">\n      <th mat-header-cell *matHeaderCellDef> Id. </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.id}} </td>\n    </ng-container>\n    <ng-container matColumnDef=\"FirstName\">\n      <th mat-header-cell *matHeaderCellDef> First Name </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.FirstName}} </td>\n    </ng-container>\n\n    <!-- Name Column -->\n    <ng-container matColumnDef=\"LastName\">\n      <th mat-header-cell *matHeaderCellDef> Last Name </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.LastName}} </td>\n    </ng-container>\n\n    <!-- Weight Column -->\n    <ng-container matColumnDef=\"Email\">\n      <th mat-header-cell *matHeaderCellDef> E-mail </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.Email}} </td>\n    </ng-container>\n\n    <!-- Symbol Column -->\n    \n    <ng-container matColumnDef=\"Address\">\n      <th mat-header-cell *matHeaderCellDef> Address </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.Address}} </td>\n    </ng-container>\n    <ng-container matColumnDef=\"actions\">\n      <mat-header-cell *matHeaderCellDef style=\"margin-top: 5%;\n      margin-left: 3%;\">\n        Actions\n      </mat-header-cell>\n\n      <mat-cell *matCellDef=\"let row; let i=index;\">\n        <button mat-icon-button color=\"accent\" (click)=\"editDialog(i,row.id)\">\n          <mat-icon aria-label=\"Edit\">edit</mat-icon> Edit\n        </button>\n\n        <button mat-icon-button color=\"accent\" (click)=\"deleteDialog(i,row.id,row.FirstName, row.LastName, row.Email,row.Address)\">\n          <!-- <mat-icon aria-label=\"Delete\" (click)=\"deleteDialog(i, 1, row.name, row.username, row.email,row.phone,row.city,row.zipcode)\">delete</mat-icon> -->\n          <mat-icon aria-label=\"Delete\" >delete</mat-icon>\n        Delete\n        </button>\n      </mat-cell>\n    </ng-container>\n    <tr mat-header-row *matHeaderRowDef=\" displayedColumns\">\n            </tr>\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n  </table>\n\n \n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { HttpClientInMemoryWebApiModule } from 'angular-in-memory-web-api';\nimport { InMemoryService } from './in-memory.service';\n\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatNativeDateModule, MatRippleModule } from '@angular/material/core';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatToolbarModule } from '@angular/material/toolbar';\n\n\nimport {AddUserComponent} from '../app/users/add-user/add-user.component';\nimport {DeleteUserComponent} from '../app/users/delete-user/delete-user.component';\nimport {EditUserComponent} from '../app/users/edit-user/edit-user.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AddUserComponent,\n    DeleteUserComponent,\n    EditUserComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    HttpClientInMemoryWebApiModule.forRoot(InMemoryService),\n  \n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatStepperModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatToolbarModule,\n     \n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { InMemoryDbService } from 'angular-in-memory-web-api';\r\n\r\nexport class InMemoryService implements InMemoryDbService {\r\n  createDb() {\r\n    const sample = [\r\n        {\r\n        \"id\":1,\r\n        \"FirstName\":\"Nelson\",\r\n        \"LastName\":\"Dez\",\r\n        \"Email\":\"nelson@gmail.com\",\r\n        \"Address\":\"IN\"\r\n        },\r\n        {\r\n        \"id\":2,\r\n        \"FirstName\":\"Tassel\",\r\n        \"LastName\":\"Ro\",\r\n        \"Email\":\"ro@gmail.com\",\r\n        \"Address\":\"EU\"\r\n        },\r\n        {\r\n        \"id\":3,\r\n        \"FirstName\":\"Andrew\",\r\n        \"LastName\":\"Tc\",\r\n        \"Email\":\"tc@gmail.com\",\r\n        \"Address\":\"UK\"\r\n        },\r\n        {\r\n        \"id\":4,\r\n        \"FirstName\":\"Den\",\r\n        \"LastName\":\"Roy\",\r\n        \"Email\":\"den@gmail.com\",\r\n        \"Address\":\"GE\"\r\n        },\r\n        {\r\n        \"id\":5,\r\n        \"FirstName\":\"Fiz\",\r\n        \"LastName\":\"Ijo\",\r\n        \"Email\":\"fiz@gmail.com\",\r\n        \"Address\":\"NE\"\r\n        }\r\n      ];\r\n    return { sample };\r\n  }\r\n}","import { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport {Component, Inject} from '@angular/core';\nimport { DataService } from '../../services/data.service';\nimport {MatSnackBar} from '@angular/material/snack-bar';\n\n@Component({\n    selector: 'delete-user.component',\n    templateUrl: 'delete-user.component.html',\n    styleUrls: ['delete-user.component.scss']\n})\nexport class DeleteUserComponent {\n\n  constructor(public dialogRef: MatDialogRef<DeleteUserComponent>,\n              @Inject(MAT_DIALOG_DATA) public data: any, \n              public dataService: DataService,\n              private _snackBar: MatSnackBar) { }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  confirmDelete(): void {\n    this.dataService.deleteUser(this.data.id);\n    this._snackBar.open('User deleted succesfully.', 'deleted', {\n      duration: 2000,\n    });\n  }\n}\n","<div class=\"container\">\n    <h3 mat-dialog-title>Are you sure?</h3>\n    <div mat-dialog-content>\n      First Name: {{data.FirstName}}\n      <p></p>\n      Last Name: {{data.LastName}}\n      <p></p>\n      E-mail: {{data.Email}}\n      \n      <p></p>\n      Address: {{data.Address}}\n      <p></p>\n      \n    </div>\n  \n    <div mat-dialog-actions>\n      <button mat-button [mat-dialog-close]=\"1\" (click)=\"confirmDelete()\">Delete</button>\n      <button mat-button (click)=\"onNoClick()\" tabindex=\"-1\">Cancel</button>\n    </div>\n  </div>\n  ","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}